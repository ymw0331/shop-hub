name: E-Commerce Hub Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Backend Dependencies
      run: npm ci

    - name: Install Frontend Dependencies
      working-directory: ./client
      run: npm ci

    - name: Setup Environment
      run: |
        cp .env.example .env
        echo "POSTGRES_HOST=localhost" >> .env
        echo "POSTGRES_PORT=5432" >> .env
        echo "POSTGRES_USER=test_user" >> .env
        echo "POSTGRES_PASSWORD=test_password" >> .env
        echo "POSTGRES_DB=test_db" >> .env
        echo "JWT_SECRET=test_secret_key" >> .env
        echo "PORT=8000" >> .env

    - name: Build Backend
      run: npm run build

    - name: Run Database Migrations
      run: npm run typeorm migration:run

    - name: Seed Test Data
      run: |
        npx tsx create-test-users.ts
        npm run db:seed

    - name: Start Backend Server
      run: |
        npm run dev &
        sleep 10

    - name: Start Frontend Server
      working-directory: ./client
      run: |
        npm start &
        sleep 10

    - name: Run API Tests
      run: npx tsx test-comprehensive.ts

    - name: Run E2E Tests
      run: |
        npx playwright install chromium
        node test-complete-crud.js

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          test-report-*.json
          test-results-*.txt
          crud-screenshots/
          test-screenshots/

    - name: Test Summary
      if: always()
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "API Tests completed" >> $GITHUB_STEP_SUMMARY
        echo "E2E Tests completed" >> $GITHUB_STEP_SUMMARY
        if [ -f test-report-*.json ]; then
          cat test-report-*.json | jq '.summary' >> $GITHUB_STEP_SUMMARY
        fi